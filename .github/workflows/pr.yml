name: CI

on:
  pull_request:
    branches: [new]
    types: [opened, synchronize, edited, reopened, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v17.2
        with:
           files: |
            **/*.json
           base_sha: ${{ github.event.pull_request.base.sha }}
           
      - name: List all added files

        run: |
          echo  ${{ toJSON(steps.changed-files.outputs.all_changed_files) }}

      - name: validate access.json file
 
        run: |
          cat  ${{ toJSON(steps.changed-files.outputs.all_changed_files) }}|jq
      - name: Read access.json

        id: readAccessFile
        uses: juliangruber/read-file-action@v1
        if: |
          github.event.pull_request.merged == true        
        with:
          path: ${{ toJSON(steps.changed-files.outputs.all_changed_files) }}
      - name: startTime from Pull request merged_at
        id: startTime
        run: echo ::set-output name=timeStamp::$(jq -rRn --arg GITHUB_CONTEXT ${{github.event.pull_request.merged_at}} '$GITHUB_CONTEXT | fromdate')
      - name: ConfigureAws
        if: |
          github.event.pull_request.merged == true
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: send sqs from aws cli
        if: |
          github.event.pull_request.merged == true
        run: aws sqs send-message --region us-west-2 --queue-url ${{ secrets.SQS_URL }} --message-body "message body goes " --message-attributes '{ "userName":{ "DataType":"String","StringValue":"${{fromJson(steps.readAccessFile.outputs.content).aws_username}}" }, "startTime":{ "DataType":"String","StringValue":"${{ steps.startTime.outputs.timeStamp }}"}, "duration":{ "DataType":"String","StringValue":"${{fromJson(steps.readAccessFile.outputs.content).timeDuration_in_seconds}}"}, "reason":{ "DataType":"String","StringValue":"${{fromJson(steps.readAccessFile.outputs.content).Reason_for_Prod_access}}"},"AccessType":{ "DataType":"String","StringValue":"${{fromJson(steps.readAccessFile.outputs.content).AccessType}}"}}'          
